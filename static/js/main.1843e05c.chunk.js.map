{"version":3,"sources":["components/ResidentInfo.js","components/ResidentContainer.js","components/LocationInfo.js","components/LocationContainer.js","components/SearchBox.js","components/RickAndMortyApi.js","App.js","reportWebVitals.js","index.js"],"names":["ResidentInfo","dataResidents","useState","prevPage","setPrevPage","nextPage","setNextPage","dataPrint","setDataPrint","disableNextButton","setDisableNextButton","disablePrevButton","setDisablePrevButton","handlePagination","prev","next","slice","useEffect","length","handleNextPage","a","style","display","justifyContent","alignItems","marginBottom","onClick","disabled","height","background","border","fontWeight","margin","padding","width","className","map","res","src","image","alt","name","status","origin","species","gender","episode","id","color","textAlign","marginTop","fontSize","ResidentContainer","urlsResidents","setDataResidents","allResidents","funcRequest","url","axios","method","request","data","forEach","urlRes","LocationInfo","dataLocationSelected","type","dimension","residents","borderLeft","LocationContainer","db","nameLocationToSearch","setDataLocationSelected","location","filter","loc","SearchBox","searchLocation","setSearchLocation","setNameLocationToSearch","randomCityIndex","Math","round","random","city","ele","index","onSubmit","e","preventDefault","defaultValue","outline","borderRadius","onChange","target","value","marginLeft","RickAndMortyApi","setDb","dataBase","fetch","datos","json","results","push","info","App","minHeight","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1843e05c.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport \"../css/residentInfo.css\";\r\nconst ResidentInfo = ({ dataResidents }) => {\r\n  const [prevPage, setPrevPage] = useState(0);\r\n  const [nextPage, setNextPage] = useState(10);\r\n  const [dataPrint, setDataPrint] = useState([]);\r\n  const [disableNextButton, setDisableNextButton] = useState(false);\r\n  const [disablePrevButton, setDisablePrevButton] = useState(false);\r\n  const handlePagination = (prev, next) => {\r\n    return dataResidents.slice(prev, next);\r\n  };\r\n  useEffect(() => {\r\n    setPrevPage(0);\r\n    setNextPage(10);\r\n    setDataPrint(handlePagination(prevPage, nextPage));\r\n    if (nextPage === dataResidents.length) {\r\n      setDisableNextButton(true);\r\n    } else {\r\n      setDisableNextButton(false);\r\n      setDisablePrevButton(false);\r\n    }\r\n    if (dataResidents.length <= 10) {\r\n      setDisableNextButton(true);\r\n      setDisablePrevButton(true);\r\n    }\r\n    setDisablePrevButton(true);\r\n  }, [dataResidents]);\r\n  useEffect(() => {\r\n    if (nextPage === dataResidents.length) {\r\n      setDisableNextButton(true);\r\n      setDisablePrevButton(false);\r\n    } else {\r\n      setDisableNextButton(false);\r\n      setDisablePrevButton(false);\r\n    }\r\n    if (dataResidents.length <= 10) {\r\n      setDisableNextButton(true);\r\n      setDisablePrevButton(true);\r\n    }\r\n  }, [nextPage]);\r\n  useEffect(() => {\r\n    if (prevPage === 0) {\r\n      setDisablePrevButton(true);\r\n    }\r\n    setDataPrint(handlePagination(prevPage, nextPage));\r\n  }, [prevPage]);\r\n  const handleNextPage = async () => {\r\n    if (dataResidents.slice(nextPage, dataResidents.length).length > 10) {\r\n      setPrevPage(nextPage);\r\n      setNextPage(nextPage + 10);\r\n    } else {\r\n      setPrevPage(nextPage);\r\n      setNextPage(dataResidents.length);\r\n      setDataPrint(handlePagination(prevPage, nextPage));\r\n    }\r\n  };\r\n  const handlePrevPage = () => {\r\n    if (prevPage - 10 >= 0) {\r\n      setNextPage(prevPage);\r\n      setPrevPage(prevPage - 10);\r\n      setDataPrint(handlePagination(prevPage, nextPage));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          marginBottom: \".3rem\",\r\n        }}\r\n      >\r\n        <button\r\n          onClick={handlePrevPage}\r\n          disabled={disablePrevButton}\r\n          style={{\r\n            height: \"1.5rem\",\r\n            background: \"#3876B3\",\r\n            border: \"none\",\r\n            fontWeight: \"bold\",\r\n            margin: \".3rem\",\r\n            padding: \".2rem\",\r\n            width: \"5rem\",\r\n          }}\r\n        >\r\n          Previous\r\n        </button>\r\n        <button\r\n          onClick={handleNextPage}\r\n          disabled={disableNextButton}\r\n          style={{\r\n            height: \"1.5rem\",\r\n            background: \"#3876B3\",\r\n            border: \"none\",\r\n            fontWeight: \"bold\",\r\n            padding: \".2rem\",\r\n            width: \"5rem\",\r\n          }}\r\n        >\r\n          Next\r\n        </button>\r\n      </div>\r\n      {dataPrint[0] !== \"No hay residentes\" ? (\r\n        <div className=\"resident-container\">\r\n          {dataPrint.map((res) => (\r\n            <div className=\"resident-card\" key={res.id}>\r\n              <img src={res.image} alt={res.name} />\r\n              <div className=\"resident-card-info\">\r\n                <h3>{res.name}</h3>\r\n                <p>\r\n                  <span>Status: </span>\r\n                  {res.status}\r\n                </p>\r\n                <p>\r\n                  <span>Origin: </span>\r\n                  {res.origin.name}\r\n                </p>\r\n                <p>\r\n                  <span>Specie: </span>\r\n                  {res.species}\r\n                </p>\r\n                <p>\r\n                  <span>Gender: </span>\r\n                  {res.gender}\r\n                </p>\r\n                <p>\r\n                  <span>Episodes: </span> {res.episode.length}\r\n                </p>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{\r\n            color: \"white\",\r\n            textAlign: \"center\",\r\n            marginTop: \"1rem\",\r\n            fontSize: \"2rem\",\r\n          }}\r\n        >\r\n          <h3>{dataPrint[0]}</h3>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ResidentInfo;\r\n","import { useState, useEffect } from \"react\";\r\nimport ResidentInfo from \"./ResidentInfo\";\r\nimport axios from \"axios\";\r\nconst ResidentContainer = ({ urlsResidents }) => {\r\n  const [dataResidents, setDataResidents] = useState();\r\n  useEffect(() => {\r\n    if (urlsResidents.length !== 0) {\r\n      let allResidents = [];\r\n      const funcRequest = async (url) => {\r\n        let request = await axios({\r\n          method: \"GET\",\r\n          url,\r\n        });\r\n        if (request) {\r\n          allResidents = [...allResidents, request.data];\r\n        }\r\n        if (allResidents.length === urlsResidents.length) {\r\n          setDataResidents(allResidents);\r\n        }\r\n      };\r\n      urlsResidents.forEach((urlRes) => funcRequest(urlRes));\r\n    } else {\r\n      setDataResidents([\"No hay residentes\"]);\r\n    }\r\n  }, [urlsResidents]);\r\n\r\n  return (\r\n    <div>{dataResidents && <ResidentInfo dataResidents={dataResidents} />}</div>\r\n  );\r\n};\r\nexport default ResidentContainer;\r\n","import ResidentContainer from \"./ResidentContainer\";\r\nconst LocationInfo = ({ dataLocationSelected }) => {\r\n  let { name, type, dimension, residents } = dataLocationSelected[0];\r\n\r\n  return (\r\n    <>\r\n      <div className=\"location-info\">\r\n        <p style={{ padding: \".2rem\" }}>\r\n          <span style={{ fontWeight: \"bold\" }}>City Name:</span> {name}\r\n        </p>\r\n        <p style={{ borderLeft: \"1px solid #eee\", padding: \".2rem\" }}>\r\n          <span style={{ fontWeight: \"bold\" }}>Type: </span>\r\n          {type}\r\n        </p>\r\n        <p style={{ borderLeft: \"1px solid #eee\", padding: \".2rem\" }}>\r\n          <span style={{ fontWeight: \"bold\" }}>Dimension:</span> {dimension}\r\n        </p>\r\n        <p style={{ borderLeft: \"1px solid #eee\", padding: \".2rem\" }}>\r\n          <span style={{ fontWeight: \"bold\" }}>Residents:</span>{\" \"}\r\n          {residents.length}\r\n        </p>\r\n      </div>\r\n      <ResidentContainer urlsResidents={residents} />\r\n    </>\r\n  );\r\n};\r\nexport default LocationInfo;\r\n","import { useEffect, useState } from \"react\";\r\nimport LocationInfo from \"./LocationInfo\";\r\nconst LocationContainer = ({ db, nameLocationToSearch }) => {\r\n  const [dataLocationSelected, setDataLocationSelected] = useState();\r\n  useEffect(() => {\r\n    if (nameLocationToSearch) {\r\n      let location = db.filter((loc) => loc.name === nameLocationToSearch);\r\n      setDataLocationSelected(location);\r\n    }\r\n  }, [nameLocationToSearch]);\r\n\r\n  return (\r\n    <>\r\n      {dataLocationSelected && (\r\n        <LocationInfo dataLocationSelected={dataLocationSelected} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default LocationContainer;\r\n","import { useState, useEffect } from \"react\";\r\nimport LocationContainer from \"./LocationContainer\";\r\nimport \"../css/searchBox.css\";\r\nconst SearchBox = ({ db }) => {\r\n  const [searchLocation, setSearchLocation] = useState();\r\n  const [nameLocationToSearch, setNameLocationToSearch] = useState();\r\n  const handleSubmitForm = (e) => {\r\n    e.preventDefault();\r\n    setNameLocationToSearch(searchLocation);\r\n    setSearchLocation();\r\n  };\r\n  const handleChangeSelect = (e) => {\r\n    setSearchLocation(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    if (db.length !== 0) {\r\n      let randomCityIndex = Math.round(Math.random() * db.length - 1);\r\n      let city = db.filter((ele, index) => {\r\n        if (index === randomCityIndex) {\r\n          return ele.name;\r\n        }\r\n      });\r\n      setNameLocationToSearch(city[0].name);\r\n    }\r\n  }, [db]);\r\n  return (\r\n    <>\r\n      <div className=\"container-form\">\r\n        <form onSubmit={handleSubmitForm} style={{ background: \"red\" }}>\r\n          <input\r\n            type=\"text\"\r\n            defaultValue={searchLocation}\r\n            style={{\r\n              background: \"white\",\r\n              outline: \"none\",\r\n              border: \"1px solid #B3B9B3\",\r\n              borderRadius: \".3rem\",\r\n              display: \"inline-block\",\r\n              height: \"1.5rem\",\r\n              margin: \".3rem\",\r\n            }}\r\n          ></input>\r\n          <button\r\n            type=\"submit\"\r\n            style={{\r\n              height: \"1.5rem\",\r\n              background: \"#38B338\",\r\n              border: \"none\",\r\n              borderRadius: \".3rem\",\r\n              fontWeight: \"bold\",\r\n            }}\r\n          >\r\n            Search\r\n          </button>\r\n          <br />\r\n          {db.length !== 0 && (\r\n            <select\r\n              defaultValue=\"Selected City\"\r\n              onChange={handleChangeSelect}\r\n              style={{\r\n                border: \"1px solid #B3B9B3\",\r\n                borderRadius: \".3rem\",\r\n                height: \"1.5rem\",\r\n                marginBottom: \".3rem\",\r\n                marginLeft: \".3rem\",\r\n                outline: \"none\",\r\n              }}\r\n            >\r\n              <option disabled>Selected City</option>\r\n              {db.map((loc) => (\r\n                <option key={loc.id}>{loc.name}</option>\r\n              ))}\r\n            </select>\r\n          )}\r\n        </form>\r\n      </div>\r\n      <div className=\"location-container\">\r\n        <LocationContainer\r\n          db={db}\r\n          nameLocationToSearch={nameLocationToSearch}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default SearchBox;\r\n","import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport SearchBox from \"./SearchBox\";\r\nconst RickAndMortyApi = () => {\r\n  const [db, setDb] = useState([]);\r\n  useEffect(() => {\r\n    const dataBase = [];\r\n    const data = async (url) => {\r\n      const datos = await fetch(url);\r\n      const json = await datos.json();\r\n      json.results.forEach((city) => {\r\n        dataBase.push(city);\r\n      });\r\n      if (json.info.next) {\r\n        data(json.info.next);\r\n      }\r\n      if (!json.info.next) {\r\n        setDb(dataBase);\r\n      }\r\n    };\r\n    data(\"https://rickandmortyapi.com/api/location\");\r\n  }, []);\r\n  return (\r\n    <div style={{ width: \"90%\", margin: \"auto\" }}>\r\n      <SearchBox db={db} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RickAndMortyApi;\r\n","import \"./App.css\";\nimport RickAndMortyApi from \"./components/RickAndMortyApi\";\n\nfunction App() {\n  return (\n    <div style={{ background: \"#24272D\", minHeight: \"100vh\" }}>\n      <div\n        style={{\n          color: \"white\",\n          textAlign: \"center\",\n          fontSize: \"3rem\",\n          padding: \".3rem\",\n        }}\n      >\n        <h2>Rick and Morty</h2>\n      </div>\n\n      <RickAndMortyApi />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}